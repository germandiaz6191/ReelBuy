<MudBreakpointProvider OnBreakpointChanged="OnBreakpointChanged" />

<div class="main-reel-container">
    <div class="video-vertical-stack">
        <div class="video-title">
            <h4>@FirstReel?.Name</h4>
        </div>
        <div class="video-actions">
            <MudPaper Class="d-flex align-items-center px-2 py-1" Style="cursor: pointer;" Elevation="0">
                <MudIcon Icon="@Icons.Material.TwoTone.PriceChange" Color="Color.Default" />
                <MudText Class="ms-1" Typo="Typo.subtitle2">@ReelData?.Price.ToString("N2")</MudText>
            </MudPaper>
            <MudButton StartIcon="@Icons.Material.TwoTone.ShoppingCart"
                        Color="Color.Primary"
                        Variant="Variant.Filled"
                       OnClick="@(() => OnBuyAsync(@ReelData))">
                    @Localizer["Buy"]
            </MudButton>
        </div>
        <div class="video-controls-container">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBackIos"
               Color="Color.Default"
               Size="Size.Large"
                           OnClick="OnPrevious" IsNextDisabled
               Disabled="@IsPreviousDisabled"
               Class="carousel-icon-button" />

            @if (ReelData != null)
            {
                <div class="main-reel color-palette-surface">
                    <video controls autoplay class="reel-video"
                           src="data:video/mp4;base64,@FirstReel?.ReelUri"
                           @onended="OnNext">
                    </video>
                </div>
            }

            <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos"
                           Color="Color.Primary"
                           Size="Size.Large"
                           OnClick="OnNext"
                           Disabled="@IsNextDisabled"
                           Class="carousel-icon-button" />
        </div>

        <div class="video-actions">
            <MudTooltip Text="@(IsLiked ? Localizer["UnlikeHelp"] : Localizer["LikeHelp"])" Placement="Placement.Bottom">
                <MudPaper Class="d-flex align-items-end px-2 py-1" Style="cursor: pointer; height: 40px;" Elevation="0">
                    <MudIconButton Icon="@(IsLiked ? Icons.Material.TwoTone.ThumbUp : Icons.Material.Outlined.ThumbUp)" Color="@(IsLiked ? Color.Primary : Color.Default)" OnClick="@(() => OnLikeAsync(@ReelData))" Size="Size.Small" />
                    <MudText Class="ms-1" Typo="Typo.caption"><MudText Class="ms-1" Typo="Typo.caption">@FormatNumber(ReelData?.LikesGroup ?? 0)</MudText></MudText>
                </MudPaper>
            </MudTooltip>
            <MudTooltip Text="@Localizer["InfoHelp"]" Placement="Placement.Bottom">
                <MudIconButton Icon="@Icons.Material.TwoTone.Info" Color="Color.Default" Class="action-button" OnClick="@(() => OnInfoAsync(@ReelData))" />
            </MudTooltip>
            <MudTooltip Text="@Localizer["CommentHelp"]" Placement="Placement.Bottom">
                <MudIconButton Icon="@Icons.Material.TwoTone.Comment" Color="Color.Default" Class="action-button" OnClick="@(() => OnCommentsAsync())" />
            </MudTooltip>
            <MudTooltip Text="@(IsFavorite ? Localizer["DisFavoriteHelp"] : Localizer["FavoriteHelp"])" Placement="Placement.Bottom">
                <MudIconButton Icon="@(IsFavorite ? Icons.Material.TwoTone.BookmarkAdded : Icons.Material.Outlined.BookmarkAdded)" Color="@(IsFavorite ? Color.Primary : Color.Default)" Class="action-button" OnClick="@(() => OnFavoriteAsync(@ReelData))" />
            </MudTooltip>
        </div>
    </div>
</div>

@if (ShowComments)
{
    <!-- Drawer lateral o pantalla completa en móviles -->
<MudDrawer Anchor="Anchor.Right"
           Open="@ShowComments"
           Elevation="10"
           Variant="DrawerVariant.Temporary"
           Width="@DrawerWidth"
           Class="custom-drawer-width"
           ClipMode="DrawerClipMode.Always"
               OpenChanged="OnCommentsAsync
">

        <MudDrawerHeader Class="d-flex align-items-center justify-between px-4 py-2">
            <MudIconButton Icon="@Icons.Material.Filled.Close"
                           Color="Color.Default"
                           OnClick="@(() => OnCommentsAsync())" />
            <MudText Typo="Typo.h6" Class="ms-2">@Localizer["TitleComments"]</MudText>
        </MudDrawerHeader>

    <MudDrawerContent>
        <MudPaper Class="p-4 mt-4" Elevation="2" Style="border-radius: 12px;">
             @if (Comments != null && Comments.Any())
            {
                    @for (int i = 0; i < Comments.Count; i++)
                    {
                        var comment = Comments[i];
                        bool isEven = i % 2 == 0;
                        var alignmentClass = isEven ? "comment-left text-start" : "comment-right text-end ms-auto";
                        var bgClass = isEven ? "bg-surface" : "bg-alternate";
                        bool isConfirming = ConfirmingCommentId == comment.Id;

                        <MudPaper Class=@($"pa-2 my-2 {alignmentClass} {bgClass}") Elevation="1" Style="border-radius: 8px;">
                            @if (isConfirming) //acciones para confirmar
                            {
                                <div class="d-flex justify-content-between align-items-center">
                                    <MudText Typo="Typo.body2" Color="Color.Error">@Localizer["ConfirmDeleteInline"]</MudText>
                                    <div>
                                        <MudIconButton Icon="@Icons.Material.Filled.Check"
                                                       Color="Color.Success"
                                                       Size="Size.Small"
                                                       OnClick="() => OnDeleteCommentAsync(comment)" />
                                        <MudIconButton Icon="@Icons.Material.Filled.Close"
                                                       Color="Color.Secondary"
                                                       Size="Size.Small"
                                                       OnClick="CancelDelete" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                // lista de comentarios
                                <div class="d-flex justify-content-between align-items-start w-100">
                                    @if (!isEven && Identity != null && comment.User.Id == Identity)
                                    {
                                        <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                       Color="Color.Error"
                                                       Size="Size.Small"
                                                       OnClick="() => ConfirmingCommentId = comment.Id" />
                                    }
                                    
                                    <div class="@((isEven ? "text-start" : "text-end")) ms-2 me-2 flex-grow-1">
                                        <MudText Typo="Typo.subtitle2" Color="Color.Primary">@comment.User.FullName</MudText>
                                        <MudText Typo="Typo.overline" Color="Color.Secondary" Class="ms-1" Style="font-size: 0.7rem;">
                                            @comment.RegistrationDate.ToLocalTime().ToString("dd MMM yyyy")
                                        </MudText>
                                    </div>

                                    @if (isEven && Identity != null && comment.User.Id == Identity)
                                    {
                                        <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                       Color="Color.Error"
                                                       Size="Size.Small"
                                                       OnClick="() => ConfirmingCommentId = comment.Id" />
                                    }
                                </div>

                                <MudText Typo="Typo.body2" Class="mt-1">@comment.Description</MudText>
                            }
                        </MudPaper>
                    }
            }
            else
            {
                    <MudText Typo="Typo.caption" Color="Color.Secondary">@Localizer["NoComments"]</MudText>
            } 

            <MudDivider Class="my-3" />

            <MudTextField @bind-Value="NewComment"
                              Label="@Localizer["WriteComment"]"
                          Variant="Variant.Outlined"
                          Lines="3"
                          FullWidth="true"
                          Adornment="Adornment.End"
                          AdornmentIcon="@Icons.Material.Filled.Send"
                          OnAdornmentClick="SendCommentAsync" />

        </MudPaper>
            
            @if (_showMoreComments && Comments != null && Comments.Any())
            {
                <div class="text-muted small text-center my-3 d-flex justify-center align-center gap-2">
                    <MudIcon Icon="@Icons.Material.Filled.ArrowDownward"
                             Size="Size.Small"
                             Class="@(_loadingMore ? "rotate-icon" : "")" />
                    <MudButton Variant="Variant.Text"
                               Color="Color.Primary"
                               OnClick="LoadMoreCommentsAsync"
                               Disabled="@_loadingMore">
                        @(_loadingMore ? @Localizer["LoadingComments"] : @Localizer["LoadMoreComments"])
                    </MudButton>
                </div>
            }
    </MudDrawerContent>
</MudDrawer>
}