@using ReelBuy.Shared.Enums
@using ReelBuy.Shared.Resources
@using ReelBuy.Shared.Entities
@using ReelBuy.Frontend.Repositories
@using MudBlazor

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" />

<EditForm EditContext="editContext" OnValidSubmit="OnSaveClicked">
    <DataAnnotationsValidator />
    <MudTextField Label="@Localizer["Name"]"
                  @bind-Value="@Product.Name"
                  For="@(() => Product.Name)"
                  Class="mb-4" />     

    <MudCard Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6">@Localizer["Description"]</MudText>
        </MudCardHeader>
        <MudCardContent>
                <ReelBuy.Frontend.Shared.RichTextEditor @ref="richTextEditor" 
                                                      Content="@Product.Description" 
                                                      Placeholder="@Localizer["Description"]"
                                                      ContentChanged="OnDescriptionChanged"
                                                      EditorId="@($"productEditor_{Product.Id}")"/>
        </MudCardContent>
    </MudCard>

    <MudNumericField Label="@Localizer["Price"]"
                     @bind-Value="@Product.Price"
                     For="@(() => Product.Price)"
                     Class="mb-4"
                     Adornment="Adornment.Start"
                     AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
   
    <MudCardContent>
        @if (ShowStatusSelect && Product.Id != 0)
        {
            <MudSelect T="int" Label="@Localizer["Status"]" 
                      @bind-Value="@Product.StatusId"
                      For="@(() => Product.StatusId)"
                      AnchorOrigin="Origin.BottomCenter"
                      Class="mb-4"
                      TextChanged="@((string _) => StateHasChanged())"
                      Text="@(statuses?.FirstOrDefault(s => s.Id == Product.StatusId)?.Name ?? string.Empty)">
                @if (statuses != null)
                {
                    @if (IsStatusApproved)
                    {
                        var inactiveStatus = statuses.FirstOrDefault(s => s.Id == (int)StatusProduct.Inactive);
                        if (inactiveStatus != null)
                        {
                            <MudSelectItem T="int" Value="@inactiveStatus.Id">@inactiveStatus.Name</MudSelectItem>
                        }
                    }
                    else
                    {
                        @foreach (var status in statuses)
                        {
                            <MudSelectItem T="int" Value="@status.Id">@status.Name</MudSelectItem>
                        }
                    }
                }
            </MudSelect>
        }
        else
        {
            <MudTextField Label="@Localizer["Status"]"
                         Value="@(statuses?.FirstOrDefault(s => s.Id == Product.StatusId)?.Name ?? string.Empty)"
                         ReadOnly="true"
                         Class="mb-4" />
            
            @if (ShowActivateButton)
            {
                <MudButton Variant="Variant.Filled"
                          Color="Color.Success"
                          OnClick="ActivateProductAsync"
                          StartIcon="@Icons.Material.Filled.PowerSettingsNew"
                          Class="mb-4">
                    @Localizer["Activate"]
                </MudButton>
            }
        }
    </MudCardContent>

    <MudCardContent>
        <MudAutocomplete T="Category"
            Label=@Localizer["Category"]
            Placeholder=@Localizer["SelectACategory"]
            SearchFunc="SearchCategories"
            Value="selectedCategory"
            ValueChanged="CategoryChanged"
            ToStringFunc="@(e=> e==null?null : $"{e.Name}")">
            <ItemTemplate Context="itemContext">
                @itemContext.Name
            </ItemTemplate>
        </MudAutocomplete>
    </MudCardContent>    

    <MudCardContent>
        <MudAutocomplete T="Marketplace"
            Label=@Localizer["Marketplace"]
            Placeholder=@Localizer["SelectMarketplace"]
            SearchFunc="SearchMarketplaces"
            Value="selectedMarketplace"
            ValueChanged="MarketplaceChanged"
            ToStringFunc="@(e=> e==null?null : $"{e.Name}")">
            <ItemTemplate Context="itemContext">
                @itemContext.Name
            </ItemTemplate>
        </MudAutocomplete>
    </MudCardContent> 

    <MudCardContent> 
        <MudTextField Label="@Localizer["PathUriTitle"]"
                      @bind-Value="@Product.PathUri"
                      For="@(() => @Product.PathUri)"
                      OnBlur="OnBlurValidateUri"
                      Class="mb-4" />
     </MudCardContent> 

    <MudCardContent>
        <MudAutocomplete T="Store"
            Label=@Localizer["Store"]
            Placeholder=@Localizer["SelectAStore"]
            SearchFunc="SearchStores"
            Value="selectedStore"
            ValueChanged="StoreChanged"
            ToStringFunc="@(e=> e==null?null : $"{e.Name}")">
            <ItemTemplate Context="itemContext">
                @itemContext.Name
            </ItemTemplate>
        </MudAutocomplete>
    </MudCardContent> 

    <MudItem xs="12" sm="6">
        <InputReel Label=@Localizer["Reel"] ReelSelected="ReelSelected" ReelURL="@reelUrl" ReelBase64="@reelBase64"/>
    </MudItem>

    <MudButton Variant="Variant.Outlined"
               StartIcon="@Icons.Material.Filled.ArrowBack"
               Color="Color.Info"
               OnClick="ReturnAction">
        @Localizer["Return"]
    </MudButton>

    <MudButton Variant="Variant.Outlined"
               StartIcon="@Icons.Material.Filled.Check"
               Color="Color.Primary"
               ButtonType="ButtonType.Submit">
        @Localizer["SaveChanges"]
    </MudButton>
</EditForm>
